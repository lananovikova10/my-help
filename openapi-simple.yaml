openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
    /orders:
      post:
        summary: Create an Order
        operationId: createOrder
        tags:
          - orders
        requestBody:
          description: The Order details to create
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        responses:
          201:
            description: The Order was created successfully
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Order"
          default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"

      /orders/{orderId}:
        get:
          summary: Fetch an Order
          operationId: fetchOrder
          tags:
            - orders
          parameters:
            - name: orderId
              in: path
              description: The id of the order to fetch
              required: true
              schema:
                type: integer
                format: int64
          responses:
            200:
              description: The Order was found and returned
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
            default:
              description: Unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"

        put:
          summary: Update an Order
          operationId: updateOrder
          tags:
            - orders
          parameters:
            - name: orderId
              in: path
              description: The id of the order to update
              required: true
              schema:
                type: integer
                format: int64
          requestBody:
            description: The Order details to update
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Order"
          responses:
            200:
              description: The Order was updated successfully
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
            default:
              description: Unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"

        delete:
          summary: Delete an Order
          operationId: deleteOrder
          tags:
            - orders
          parameters:
            - name: orderId
              in: path
              description: The id of the order to delete
              required: true
              schema:
                type: integer
                format: int64
          responses:
            204:
              description: The Order was deleted successfully
            default:
              description: Unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
    /pets:
      get:
        summary: List all pets
        operationId: listPets
        tags:
          - pets
        parameters:
          - name: limit
            in: query
            description: How many items to return at one time (max 100)
            required: false
            schema:
              type: integer
              format: int32
        responses:
          200:
            description: An paged array of pets
            headers:
              x-next:
                description: A link to the next page of responses
                schema:
                  type: string
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Pets"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
      post:
        summary: Create a pet
        operationId: createPets
        tags:
          - pets
        responses:
          201:
            description: Null response
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
    /pets/{petId}:
      get:
        summary: Info for a specific pet
        operationId: showPetById
        tags:
          - pets
        parameters:
          - name: petId
            in: path
            required: true
            description: The id of the pet to retrieve
            schema:
              type: string
        responses:
          200:
            description: Expected response to a valid request
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Pets"
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
components:
  schemas:
    Order:
      type: object
      required:
        - id
        - petId
        - quantity
        - shipDate
        - status
        - additionalObject
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        additionalObject:
          $ref: "#/components/schemas/AdditionalObject"
      User:
        type: object
        required:
          - id
          - username
          - firstName
          - lastName
          - email
          - password
          - phone
          - userStatus
        properties:
          id:
            type: integer
            format: int64
          username:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
          password:
            type: string
          phone:
            type: string
          userStatus:
            type: integer
            format: int32
            description: User Status
    Pet:
      title: Pet
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    AdditionalObject:
      title: SomeTitle
      type: object
      properties:
        objectField1:
          type: string
        objectField2:
          type: integer
          format: int32